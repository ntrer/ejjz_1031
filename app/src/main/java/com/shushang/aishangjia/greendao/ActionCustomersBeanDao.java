package com.shushang.aishangjia.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.shushang.aishangjia.Bean.ActionCustomersBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ACTION_CUSTOMERS_BEAN".
*/
public class ActionCustomersBeanDao extends AbstractDao<ActionCustomersBean, Long> {

    public static final String TABLENAME = "ACTION_CUSTOMERS_BEAN";

    /**
     * Properties of entity ActionCustomersBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property ActivityCode = new Property(1, int.class, "activityCode", false, "ACTIVITY_CODE");
        public final static Property ActivityId = new Property(2, String.class, "activityId", false, "ACTIVITY_ID");
        public final static Property ActivityName = new Property(3, String.class, "activityName", false, "ACTIVITY_NAME");
        public final static Property Address = new Property(4, String.class, "address", false, "ADDRESS");
        public final static Property CardNum = new Property(5, String.class, "cardNum", false, "CARD_NUM");
        public final static Property Chuangjianren = new Property(6, String.class, "chuangjianren", false, "CHUANGJIANREN");
        public final static Property Cjsj = new Property(7, long.class, "cjsj", false, "CJSJ");
        public final static Property CustomerActionId = new Property(8, String.class, "customerActionId", false, "CUSTOMER_ACTION_ID");
        public final static Property CustomerMobile = new Property(9, String.class, "customerMobile", false, "CUSTOMER_MOBILE");
        public final static Property CustomerName = new Property(10, String.class, "customerName", false, "CUSTOMER_NAME");
        public final static Property CustomerSex = new Property(11, String.class, "customerSex", false, "CUSTOMER_SEX");
        public final static Property Customersource = new Property(12, String.class, "customersource", false, "CUSTOMERSOURCE");
        public final static Property DecorationProgress = new Property(13, String.class, "decorationProgress", false, "DECORATION_PROGRESS");
        public final static Property DecorationStyle = new Property(14, String.class, "decorationStyle", false, "DECORATION_STYLE");
        public final static Property Del = new Property(15, String.class, "del", false, "DEL");
        public final static Property ManagerAcount = new Property(16, String.class, "managerAcount", false, "MANAGER_ACOUNT");
        public final static Property ManagerId = new Property(17, String.class, "managerId", false, "MANAGER_ID");
        public final static Property ManagerRealName = new Property(18, String.class, "managerRealName", false, "MANAGER_REAL_NAME");
        public final static Property MerchantCode = new Property(19, String.class, "merchantCode", false, "MERCHANT_CODE");
        public final static Property MerchantId = new Property(20, String.class, "merchantId", false, "MERCHANT_ID");
        public final static Property MerchantName = new Property(21, String.class, "merchantName", false, "MERCHANT_NAME");
        public final static Property Qdsucess = new Property(22, String.class, "qdsucess", false, "QDSUCESS");
        public final static Property QuCode = new Property(23, String.class, "quCode", false, "QU_CODE");
        public final static Property QuName = new Property(24, String.class, "quName", false, "QU_NAME");
        public final static Property ShengCode = new Property(25, String.class, "shengCode", false, "SHENG_CODE");
        public final static Property ShengName = new Property(26, String.class, "shengName", false, "SHENG_NAME");
        public final static Property ShiCode = new Property(27, String.class, "shiCode", false, "SHI_CODE");
        public final static Property ShiName = new Property(28, String.class, "shiName", false, "SHI_NAME");
        public final static Property Status = new Property(29, String.class, "status", false, "STATUS");
        public final static Property ThinkBuyGood = new Property(30, String.class, "thinkBuyGood", false, "THINK_BUY_GOOD");
        public final static Property Xgsj = new Property(31, long.class, "xgsj", false, "XGSJ");
        public final static Property Xiugairen = new Property(32, String.class, "xiugairen", false, "XIUGAIREN");
        public final static Property Qdsj = new Property(33, long.class, "qdsj", false, "QDSJ");
        public final static Property Lqsj = new Property(34, long.class, "lqsj", false, "LQSJ");
        public final static Property Lqsuccess = new Property(35, String.class, "lqsuccess", false, "LQSUCCESS");
        public final static Property IsSign = new Property(36, String.class, "isSign", false, "IS_SIGN");
    }


    public ActionCustomersBeanDao(DaoConfig config) {
        super(config);
    }
    
    public ActionCustomersBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ACTION_CUSTOMERS_BEAN\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"ACTIVITY_CODE\" INTEGER NOT NULL ," + // 1: activityCode
                "\"ACTIVITY_ID\" TEXT," + // 2: activityId
                "\"ACTIVITY_NAME\" TEXT," + // 3: activityName
                "\"ADDRESS\" TEXT," + // 4: address
                "\"CARD_NUM\" TEXT," + // 5: cardNum
                "\"CHUANGJIANREN\" TEXT," + // 6: chuangjianren
                "\"CJSJ\" INTEGER NOT NULL ," + // 7: cjsj
                "\"CUSTOMER_ACTION_ID\" TEXT," + // 8: customerActionId
                "\"CUSTOMER_MOBILE\" TEXT," + // 9: customerMobile
                "\"CUSTOMER_NAME\" TEXT," + // 10: customerName
                "\"CUSTOMER_SEX\" TEXT," + // 11: customerSex
                "\"CUSTOMERSOURCE\" TEXT," + // 12: customersource
                "\"DECORATION_PROGRESS\" TEXT," + // 13: decorationProgress
                "\"DECORATION_STYLE\" TEXT," + // 14: decorationStyle
                "\"DEL\" TEXT," + // 15: del
                "\"MANAGER_ACOUNT\" TEXT," + // 16: managerAcount
                "\"MANAGER_ID\" TEXT," + // 17: managerId
                "\"MANAGER_REAL_NAME\" TEXT," + // 18: managerRealName
                "\"MERCHANT_CODE\" TEXT," + // 19: merchantCode
                "\"MERCHANT_ID\" TEXT," + // 20: merchantId
                "\"MERCHANT_NAME\" TEXT," + // 21: merchantName
                "\"QDSUCESS\" TEXT," + // 22: qdsucess
                "\"QU_CODE\" TEXT," + // 23: quCode
                "\"QU_NAME\" TEXT," + // 24: quName
                "\"SHENG_CODE\" TEXT," + // 25: shengCode
                "\"SHENG_NAME\" TEXT," + // 26: shengName
                "\"SHI_CODE\" TEXT," + // 27: shiCode
                "\"SHI_NAME\" TEXT," + // 28: shiName
                "\"STATUS\" TEXT," + // 29: status
                "\"THINK_BUY_GOOD\" TEXT," + // 30: thinkBuyGood
                "\"XGSJ\" INTEGER NOT NULL ," + // 31: xgsj
                "\"XIUGAIREN\" TEXT," + // 32: xiugairen
                "\"QDSJ\" INTEGER NOT NULL ," + // 33: qdsj
                "\"LQSJ\" INTEGER NOT NULL ," + // 34: lqsj
                "\"LQSUCCESS\" TEXT," + // 35: lqsuccess
                "\"IS_SIGN\" TEXT);"); // 36: isSign
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ACTION_CUSTOMERS_BEAN\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, ActionCustomersBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getActivityCode());
 
        String activityId = entity.getActivityId();
        if (activityId != null) {
            stmt.bindString(3, activityId);
        }
 
        String activityName = entity.getActivityName();
        if (activityName != null) {
            stmt.bindString(4, activityName);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(5, address);
        }
 
        String cardNum = entity.getCardNum();
        if (cardNum != null) {
            stmt.bindString(6, cardNum);
        }
 
        String chuangjianren = entity.getChuangjianren();
        if (chuangjianren != null) {
            stmt.bindString(7, chuangjianren);
        }
        stmt.bindLong(8, entity.getCjsj());
 
        String customerActionId = entity.getCustomerActionId();
        if (customerActionId != null) {
            stmt.bindString(9, customerActionId);
        }
 
        String customerMobile = entity.getCustomerMobile();
        if (customerMobile != null) {
            stmt.bindString(10, customerMobile);
        }
 
        String customerName = entity.getCustomerName();
        if (customerName != null) {
            stmt.bindString(11, customerName);
        }
 
        String customerSex = entity.getCustomerSex();
        if (customerSex != null) {
            stmt.bindString(12, customerSex);
        }
 
        String customersource = entity.getCustomersource();
        if (customersource != null) {
            stmt.bindString(13, customersource);
        }
 
        String decorationProgress = entity.getDecorationProgress();
        if (decorationProgress != null) {
            stmt.bindString(14, decorationProgress);
        }
 
        String decorationStyle = entity.getDecorationStyle();
        if (decorationStyle != null) {
            stmt.bindString(15, decorationStyle);
        }
 
        String del = entity.getDel();
        if (del != null) {
            stmt.bindString(16, del);
        }
 
        String managerAcount = entity.getManagerAcount();
        if (managerAcount != null) {
            stmt.bindString(17, managerAcount);
        }
 
        String managerId = entity.getManagerId();
        if (managerId != null) {
            stmt.bindString(18, managerId);
        }
 
        String managerRealName = entity.getManagerRealName();
        if (managerRealName != null) {
            stmt.bindString(19, managerRealName);
        }
 
        String merchantCode = entity.getMerchantCode();
        if (merchantCode != null) {
            stmt.bindString(20, merchantCode);
        }
 
        String merchantId = entity.getMerchantId();
        if (merchantId != null) {
            stmt.bindString(21, merchantId);
        }
 
        String merchantName = entity.getMerchantName();
        if (merchantName != null) {
            stmt.bindString(22, merchantName);
        }
 
        String qdsucess = entity.getQdsucess();
        if (qdsucess != null) {
            stmt.bindString(23, qdsucess);
        }
 
        String quCode = entity.getQuCode();
        if (quCode != null) {
            stmt.bindString(24, quCode);
        }
 
        String quName = entity.getQuName();
        if (quName != null) {
            stmt.bindString(25, quName);
        }
 
        String shengCode = entity.getShengCode();
        if (shengCode != null) {
            stmt.bindString(26, shengCode);
        }
 
        String shengName = entity.getShengName();
        if (shengName != null) {
            stmt.bindString(27, shengName);
        }
 
        String shiCode = entity.getShiCode();
        if (shiCode != null) {
            stmt.bindString(28, shiCode);
        }
 
        String shiName = entity.getShiName();
        if (shiName != null) {
            stmt.bindString(29, shiName);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(30, status);
        }
 
        String thinkBuyGood = entity.getThinkBuyGood();
        if (thinkBuyGood != null) {
            stmt.bindString(31, thinkBuyGood);
        }
        stmt.bindLong(32, entity.getXgsj());
 
        String xiugairen = entity.getXiugairen();
        if (xiugairen != null) {
            stmt.bindString(33, xiugairen);
        }
        stmt.bindLong(34, entity.getQdsj());
        stmt.bindLong(35, entity.getLqsj());
 
        String lqsuccess = entity.getLqsuccess();
        if (lqsuccess != null) {
            stmt.bindString(36, lqsuccess);
        }
 
        String isSign = entity.getIsSign();
        if (isSign != null) {
            stmt.bindString(37, isSign);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, ActionCustomersBean entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getActivityCode());
 
        String activityId = entity.getActivityId();
        if (activityId != null) {
            stmt.bindString(3, activityId);
        }
 
        String activityName = entity.getActivityName();
        if (activityName != null) {
            stmt.bindString(4, activityName);
        }
 
        String address = entity.getAddress();
        if (address != null) {
            stmt.bindString(5, address);
        }
 
        String cardNum = entity.getCardNum();
        if (cardNum != null) {
            stmt.bindString(6, cardNum);
        }
 
        String chuangjianren = entity.getChuangjianren();
        if (chuangjianren != null) {
            stmt.bindString(7, chuangjianren);
        }
        stmt.bindLong(8, entity.getCjsj());
 
        String customerActionId = entity.getCustomerActionId();
        if (customerActionId != null) {
            stmt.bindString(9, customerActionId);
        }
 
        String customerMobile = entity.getCustomerMobile();
        if (customerMobile != null) {
            stmt.bindString(10, customerMobile);
        }
 
        String customerName = entity.getCustomerName();
        if (customerName != null) {
            stmt.bindString(11, customerName);
        }
 
        String customerSex = entity.getCustomerSex();
        if (customerSex != null) {
            stmt.bindString(12, customerSex);
        }
 
        String customersource = entity.getCustomersource();
        if (customersource != null) {
            stmt.bindString(13, customersource);
        }
 
        String decorationProgress = entity.getDecorationProgress();
        if (decorationProgress != null) {
            stmt.bindString(14, decorationProgress);
        }
 
        String decorationStyle = entity.getDecorationStyle();
        if (decorationStyle != null) {
            stmt.bindString(15, decorationStyle);
        }
 
        String del = entity.getDel();
        if (del != null) {
            stmt.bindString(16, del);
        }
 
        String managerAcount = entity.getManagerAcount();
        if (managerAcount != null) {
            stmt.bindString(17, managerAcount);
        }
 
        String managerId = entity.getManagerId();
        if (managerId != null) {
            stmt.bindString(18, managerId);
        }
 
        String managerRealName = entity.getManagerRealName();
        if (managerRealName != null) {
            stmt.bindString(19, managerRealName);
        }
 
        String merchantCode = entity.getMerchantCode();
        if (merchantCode != null) {
            stmt.bindString(20, merchantCode);
        }
 
        String merchantId = entity.getMerchantId();
        if (merchantId != null) {
            stmt.bindString(21, merchantId);
        }
 
        String merchantName = entity.getMerchantName();
        if (merchantName != null) {
            stmt.bindString(22, merchantName);
        }
 
        String qdsucess = entity.getQdsucess();
        if (qdsucess != null) {
            stmt.bindString(23, qdsucess);
        }
 
        String quCode = entity.getQuCode();
        if (quCode != null) {
            stmt.bindString(24, quCode);
        }
 
        String quName = entity.getQuName();
        if (quName != null) {
            stmt.bindString(25, quName);
        }
 
        String shengCode = entity.getShengCode();
        if (shengCode != null) {
            stmt.bindString(26, shengCode);
        }
 
        String shengName = entity.getShengName();
        if (shengName != null) {
            stmt.bindString(27, shengName);
        }
 
        String shiCode = entity.getShiCode();
        if (shiCode != null) {
            stmt.bindString(28, shiCode);
        }
 
        String shiName = entity.getShiName();
        if (shiName != null) {
            stmt.bindString(29, shiName);
        }
 
        String status = entity.getStatus();
        if (status != null) {
            stmt.bindString(30, status);
        }
 
        String thinkBuyGood = entity.getThinkBuyGood();
        if (thinkBuyGood != null) {
            stmt.bindString(31, thinkBuyGood);
        }
        stmt.bindLong(32, entity.getXgsj());
 
        String xiugairen = entity.getXiugairen();
        if (xiugairen != null) {
            stmt.bindString(33, xiugairen);
        }
        stmt.bindLong(34, entity.getQdsj());
        stmt.bindLong(35, entity.getLqsj());
 
        String lqsuccess = entity.getLqsuccess();
        if (lqsuccess != null) {
            stmt.bindString(36, lqsuccess);
        }
 
        String isSign = entity.getIsSign();
        if (isSign != null) {
            stmt.bindString(37, isSign);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public ActionCustomersBean readEntity(Cursor cursor, int offset) {
        ActionCustomersBean entity = new ActionCustomersBean( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // activityCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // activityId
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // activityName
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // address
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // cardNum
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // chuangjianren
            cursor.getLong(offset + 7), // cjsj
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // customerActionId
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // customerMobile
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // customerName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // customerSex
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // customersource
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // decorationProgress
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // decorationStyle
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // del
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // managerAcount
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // managerId
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // managerRealName
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // merchantCode
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // merchantId
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // merchantName
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // qdsucess
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // quCode
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // quName
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // shengCode
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // shengName
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // shiCode
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // shiName
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // status
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // thinkBuyGood
            cursor.getLong(offset + 31), // xgsj
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // xiugairen
            cursor.getLong(offset + 33), // qdsj
            cursor.getLong(offset + 34), // lqsj
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // lqsuccess
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36) // isSign
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, ActionCustomersBean entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setActivityCode(cursor.getInt(offset + 1));
        entity.setActivityId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setActivityName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setAddress(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCardNum(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setChuangjianren(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setCjsj(cursor.getLong(offset + 7));
        entity.setCustomerActionId(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setCustomerMobile(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCustomerName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCustomerSex(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCustomersource(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setDecorationProgress(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setDecorationStyle(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setDel(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setManagerAcount(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setManagerId(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setManagerRealName(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setMerchantCode(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setMerchantId(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setMerchantName(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setQdsucess(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setQuCode(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setQuName(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setShengCode(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setShengName(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setShiCode(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setShiName(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setStatus(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setThinkBuyGood(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setXgsj(cursor.getLong(offset + 31));
        entity.setXiugairen(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setQdsj(cursor.getLong(offset + 33));
        entity.setLqsj(cursor.getLong(offset + 34));
        entity.setLqsuccess(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setIsSign(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(ActionCustomersBean entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(ActionCustomersBean entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(ActionCustomersBean entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
